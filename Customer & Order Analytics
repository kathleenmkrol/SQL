-- In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

-- How many orders were placed in January?

SELECT COUNT(*)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

-- How many of those orders were for an iPhone?

SELECT Product, COUNT(OrderID)
FROM BIT_DB.JanSales
WHERE Product = 'iPhone'
AND length(orderID) = 6
AND orderID <> 'Order ID';

-- Select the customer account numbers for all the orders that were placed in February.

SELECT DISTINCT acctnum
FROM BIT_DB.customers
INNER JOIN BIT_DB.FebSales
ON BIT_DB.customers.order_id = BIT_DB.FebSales.orderID
AND length(orderID) = 6
AND orderID <> 'Order ID'
AND length(order_ID) = 6
AND order_id <> 'Order ID';

-- Which product was the cheapest one sold in January, and what was the price?

SELECT Product, price
FROM BIT_DB.JanSales
WHERE price in (SELECT MIN(price) FROM BIT_DB.JanSales)
GROUP BY Product;

-- What is the total revenue for each product sold in January?

SELECT Product, price, SUM(Quantity), ROUND(SUM(Quantity)*price, 2) AS Total_Revenue
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY Total_Revenue desc;

-- Which products were sold in February at 548 Lincoln St,S eattle, WA 98101, how many of each were sold, and what was the total revenue?

SELECT location, Product, price, SUM(Quantity), ROUND(SUM(Quantity)*price, 2) AS Total_Revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;

-- How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?

SELECT COUNT(DISTINCT acctnum), AVG(Quantity*price)
FROM BIT_DB.customers cust
LEFT JOIN BIT_DB.FebSales Feb
ON cust.order_id = Feb.orderID
WHERE Feb.Quantity > 2
AND length(orderid) = 6
AND orderid <> 'Order ID';

-- List all the products sold in Los Angeles in February, and include how many of each were sold.

SELECT Product, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product;

--4.6 Advanced Customer & Order Analytics

-- Q1. Which locations in New York received at least 3 orders in January, and how many orders did they each receive? (Hint: use HAVING).

SELECT location, COUNT(orderID)
FROM BIT_DB.JanSales
WHERE location like '%New York%'
AND length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY location
HAVING COUNT(orderID) >= 3;

-- Q2. How many of each type of headphone were sold in February?

SELECT Product, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE Product like '%headphone%'
AND length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY Product;

-- Q3. What was the average amount spent per account in February? 
-- (Hints: For this question, we want the average amount spent / number of accounts, not the amount spent by each account. 
-- To multiply, you can use the * symbol, and to divide, you can use the / symbol.)

SELECT SUM(Quantity*price)/COUNT(acctnum) as AvgSpentPerAcct
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id = Feb.orderID
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

-- Q4. What was the average quantity of products purchased per account in February? 
-- (Hint: just like question 3, we want the overall average, not the average for each account individually).

SELECT SUM(Quantity)/COUNT(acctnum) as AvgNumProductsPerAcct
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id = Feb.orderID
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

-- Q5. Which product brought in the most revenue in January and how much revenue did it bring in total?

SELECT Product, SUM(Quantity*price) as total_revenue
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY Product
ORDER BY total_revenue desc
LIMIT 1;
